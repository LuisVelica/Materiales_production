{"version":3,"file":"static/js/LazyLayout_admin.b5e701e2.chunk.js","mappings":"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","sources":["components/nosotros/FileAdd.jsx","components/nosotros/FormNosotros.js","components/nosotros/Nosotros.js","components/ui/Drawer.js","components/ui/Navbar.js","components/user/FormUser.js","components/user/User.js","components/user/UserList.js","routers/DashboardRoutes.js"],"sourcesContent":["import { startUploadingVideos } from \"../../actions/notes\";\nimport Swal from \"sweetalert2\";\nimport { useFormikContext, Field, ErrorMessage } from \"formik\";\nimport { memo } from \"react\";\nimport { APP_DEBUG_MODE } from \"../../helpers\";\n\nconst FileAdd = () => {\n    const formikProps = useFormikContext();\n\n    const handleFileChange = (e) => {\n        const file = e.target.files[0];\n        if (file) {\n            Swal.fire({\n                title: \"Cargando..\",\n                text: \"Por favor no cierre hasta que termine de cargar...\",\n                allowOutsideClick: false,\n                onBeforeOpen: () => {\n                    Swal.showLoading();\n                },\n            });\n\n            APP_DEBUG_MODE   &&      console.log(file);\n            const result = startUploadingVideos(file).then(\n                function (value) {\n\n                    formikProps.setFieldValue(\n                        \"url\",\n                       value\n                    );\n\n                    Swal.close();\n                    Swal.fire({\n                        title: \":D\",\n                        allowOutsideClick: false,\n                        text: \"Su video fue guardado correctamente\",\n                        html:\n                            '<iframe width=\"560\" height=\"315\" src=\"' +\n                            value +\n                            '\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>',\n                        imageWidth: 400,\n                        imageHeight: 200,\n                        imageAlt: \"Custom image\",\n                    })\n                },\n                function (reason) {\n                    APP_DEBUG_MODE &&     console.log(reason);\n                }\n            );\n        }\n    };\n\n    const handlePictureClick = () => {\n        document.querySelector(\"#fileSelector\").click();\n    };\n    return (\n        <>\n\n            <div className=\"mb-3\">\n                <label htmlFor=\"formFile\" className=\"form-label\">Imagen</label>\n                <input className=\"form-control\"\n                  id=\"fileSelector\"\n                 type=\"file\"\n                 name=\"file\"\n                 accept=\"video/*\"\n                onChange={handleFileChange}/>\n            </div>\n\n            <Field name=\"url\" id=\"url\" type=\"hidden\" />\n            <ErrorMessage name=\"url\" component=\"span\" />\n        </>\n    );\n};\n\nexport default memo(FileAdd);\n","import { memo, useEffect } from \"react\";\nimport { useFormikContext } from \"formik\";\nimport { MyTextInput } from \"../formik\";\nimport FileAdd from \"./FileAdd\";\nimport MaterialCard from \"../materiales/MaterialCard\";\nimport MaterialImage from \"../materiales/MaterialImage\";\nimport { Header } from \"../../views/common\";\n\nfunction FormNosotros({ currentNosotros }) {\n    const formikProps = useFormikContext();\n\n    const iniciar = (currentNosotros) => {\n        formikProps.setFieldValue(\"url\", currentNosotros.url);\n\n        formikProps.setFieldValue(\"name\", currentNosotros.name);\n\n        formikProps.setFieldValue(\"descripcion\", currentNosotros.descripcion);\n        formikProps.setFieldValue(\"estado\", currentNosotros.estado);\n        formikProps.setFieldValue(\"municipio\", currentNosotros.municipio);\n        formikProps.setFieldValue(\"phone\", currentNosotros.phone);\n\n        formikProps.setFieldValue(\"domicilio\", currentNosotros.domicilio);\n        formikProps.setFieldValue(\"face\", currentNosotros.face);\n        formikProps.setFieldValue(\"whatsapp\", currentNosotros.whatsapp);\n        formikProps.setFieldValue(\"correo\", currentNosotros.correo);\n\n    };\n    useEffect(() => {\n        iniciar(currentNosotros);\n    }, [currentNosotros]);\n\n    return (\n        <>\n            <Header title=\"Nosotros\" main></Header>\n\n            <div className=\"row rows-cols-1 row-cols-md-3 g-3 animate__animated animate__fadeIn notes__image\">\n                <div className=\"col-md-6\">\n                <MyTextInput\n                    label=\"Nombre de empresa\"\n                    name=\"name\"\n                    id=\"name\"\n                    type=\"text\"\n                    placeholder=\"Nombre de empresa\"\n                />\n\n                <FileAdd />\n\n                <MyTextInput\n                    label=\"Phone\"\n                    name=\"phone\"\n                    id=\"phone\"\n                    type=\"text\"\n                    placeholder=\"Phone\"\n                />\n\n                <MyTextInput\n                    label=\"whatsapp\"\n                    name=\"whatsapp\"\n                    id=\"whatsapp\"\n                    type=\"text\"\n                    placeholder=\"whatsapp\"\n                />\n             </div>\n\n\n\n                {\" \"}\n                {currentNosotros.url != \"\" ? (\n                    <MaterialCard\n                        key={currentNosotros.id}\n                        material={currentNosotros}\n                    >\n                        {() => (\n                            <>\n                                <MaterialImage\n                                    className=\"custom-image\"\n                                    style={{\n                                        boxShadow:\n                                            \"10px 10px 10px rgba(0,0,0,0.2)\",\n                                    }}\n                                />\n                            </>\n                        )}\n                    </MaterialCard>\n                ) : (\n                    <></>\n                )}{\" \"}\n            </div>\n\n            <div className=\"col-12\">\n                <MyTextInput\n                    label=\"Descripcion\"\n                    name=\"descripcion\"\n                    id=\"descripcion\"\n                    type=\"text\"\n                    placeholder=\"Descripcion\"\n                />\n            </div>\n            <div className=\"col-12\">\n                <MyTextInput\n                    label=\"Domicilio\"\n                    name=\"domicilio\"\n                    id=\"domicilio\"\n                    type=\"text\"\n                    placeholder=\"Domicilio\"\n                />\n            </div>\n            <div className=\"col-md-6\">\n                <MyTextInput\n                    label=\"Municipio\"\n                    name=\"municipio\"\n                    id=\"municipio\"\n                    type=\"text\"\n                    placeholder=\"Municipio\"\n                />\n            </div>\n            <div className=\"col-md-6\">\n                <MyTextInput\n                    label=\"Estado\"\n                    name=\"estado\"\n                    id=\"estado\"\n                    type=\"text\"\n                    placeholder=\"Estado\"\n                />\n            </div>\n\n            <div className=\"col-md-12\">\n                <MyTextInput\n                    label=\"face\"\n                    name=\"face\"\n                    id=\"face\"\n                    type=\"text\"\n                    placeholder=\"face\"\n                />\n            </div>\n            <div className=\"col-md-12\">\n                <MyTextInput\n                    label=\"correo\"\n                    name=\"correo\"\n                    id=\"correo\"\n                    type=\"text\"\n                    placeholder=\"correo\"\n                />\n            </div>\n\n        </>\n    );\n}\nexport default memo(FormNosotros);\n","import { useState, useEffect, memo } from \"react\";\nimport NosotrosServie from \"../../services/NosotrosServie\";\nimport { Formik, Form } from \"formik\";\nimport * as Yup from \"yup\";\nimport \"../../styles/validaciones.scss\";\nimport Swal from \"sweetalert2\";\nimport FormNosotros from \"./FormNosotros\";\nimport useMateriales from \"../../hooks/useMateriales\";\nimport { APP_DEBUG_MODE } from \"../../helpers\";\n\nconst Nosotros = () => {\n    const {  currentNosotros,  setCurrentNosotros } =\n    useMateriales();\n\n\n\n    const updateNosotros = (data) => {\n        APP_DEBUG_MODE   &&     console.log(data);\n        NosotrosServie.update(data)\n            .then((response) => {\n\n                setCurrentNosotros({\n                    name: response.data.name || \"\",\n                    descripcion: response.data.descripcion || \"\",\n                    url: response.data.url || \"\",\n                    domicilio: response.data.domicilio || \"\",\n                    estado: response.data.estado || \"\",\n                    municipio: response.data.municipio || \"\",\n                    phone: response.data.phone || \"\",\n                    whatsapp: response.data.whatsapp || \"\",\n                    face: response.data.face || \"\",\n                    correo: response.data.correo || \"\",\n                });\n                Swal.fire({\n                    title: \"Success!\",\n                    text: \"Nosotros fue actualizado con éxito\",\n                    icon: \"success\",\n                    confirmButtonText: \"OK\",\n                });\n\n            })\n            .catch((err) => {\n                alert(\"Ocurrio un error actualizando\");\n                APP_DEBUG_MODE &&     console.log(err);\n            });\n    };\n\n    return (\n        <div className=\"submit-form\">\n            {!currentNosotros ? (\n                <div>\n                    <h4>Por favor selecciona un registro</h4>\n                </div>\n            ) : (\n                <div>\n                    <Formik\n                        initialValues={{\n                            name: \"\",\n                            domicilio: \"\",\n                            url: \"\",\n                            estado: \"\",\n                            municipio: \"\",\n                            phone: \"\",\n                            descripcion: \"\",\n                            face: \"\",\n                            whatsapp: \"\",\n                            correo: \"\",\n                        }}\n                        onSubmit={(values) => {\n                            APP_DEBUG_MODE   &&         console.log(values);\n                            updateNosotros(values);\n                        }}\n                        validationSchema={Yup.object({\n                            name: Yup.string().required(\"Requerido\"),\n                            url: Yup.string().required(\"Requerido\"),\n                            domicilio: Yup.string().required(\"Requerido\"),\n                            phone: Yup.string().required(\"Requerido\"),\n                            municipio: Yup.string().required(\"Requerido\"),\n                            estado: Yup.string().required(\"Requerido\"),\n                            descripcion: Yup.string().required(\"Requerido\"),\n                            whatsapp:  Yup.string().required(\"Requerido\"),\n                            face:  Yup.string().required(\"Requerido\"),\n                            correo:  Yup.string()\n                            .email('El correo no tiene un formato válido')\n                            .required(\"Requerido\"),\n\n                        })}\n                    >\n                        {(formik) => (\n                            <Form>\n\n                                <div className=\"row g-3\">\n                                    <FormNosotros currentNosotros={currentNosotros} />\n                                </div>\n                                <div className=\"col-12\">\n\n                                    <button type=\"submit\" className=\"float-end btn btn-primary\">Actualizar</button>\n                                </div>\n                            </Form>\n                        )}\n                    </Formik>\n                </div>\n            )}\n        </div>\n    );\n};\n\nexport default memo(Nosotros);\n","import { memo, useState } from \"react\";\r\nimport {\r\n    Divider,\r\n    Drawer,\r\n    IconButton,\r\n    List,\r\n    ListItem,\r\n    ListItemText,\r\n    makeStyles,\r\n} from \"@material-ui/core\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { startLogout } from \"../../actions/auth\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\n\r\nconst useStyles = makeStyles(() => ({\r\n    link: {\r\n        textDecoration: \"none\",\r\n        color: \"red\",\r\n        fontSize: \"20px\",\r\n    },\r\n    icon: {\r\n        color: \"white\",\r\n    },\r\n}));\r\n\r\nfunction DrawerComponent() {\r\n    const dispatch = useDispatch();\r\n    const handleLogout = () => {\r\n        dispatch(startLogout());\r\n    };\r\n\r\n    const classes = useStyles();\r\n    const [openDrawer, setOpenDrawer] = useState(false);\r\n    return (\r\n        <>\r\n            <Drawer open={openDrawer} onClose={() => setOpenDrawer(false)}>\r\n                <List>\r\n            \r\n                <ListItem onClick={() => setOpenDrawer(false)}>\r\n                        <ListItemText>\r\n                            <Link to=\"/admin/nosotros\" className={classes.link}>\r\n                                Nosotros\r\n                            </Link>\r\n                        </ListItemText>\r\n                    </ListItem>\r\n\r\n\r\n                    <Divider />\r\n                <ListItem onClick={() => setOpenDrawer(false)}>\r\n                        <ListItemText>\r\n                            <Link to=\"/admin/usuarios\" className={classes.link}>\r\n                                Usuarios\r\n                            </Link>\r\n                        </ListItemText>\r\n                    </ListItem>\r\n\r\n\r\n                    <Divider />\r\n                <ListItem onClick={() => setOpenDrawer(false)}>\r\n                        <ListItemText>\r\n                            <Link to=\"/admin/bolsas\" className={classes.link}>\r\n                                Bolsas\r\n                            </Link>\r\n                        </ListItemText>\r\n                    </ListItem>\r\n\r\n\r\n                    <Divider />\r\n\r\n\r\n\r\n                    <ListItem onClick={() => setOpenDrawer(false)}>\r\n                        <ListItemText>\r\n                            <Link to=\"/admin/blogs\" className={classes.link}>\r\n                                Blogs\r\n                            </Link>\r\n                        </ListItemText>\r\n                    </ListItem>\r\n\r\n\r\n                    <Divider />\r\n\r\n\r\n                    <ListItem onClick={() => setOpenDrawer(false)}>\r\n                        <ListItemText>\r\n                            <Link to=\"/admin/videos\" className={classes.link}>\r\n                                Videos\r\n                            </Link>\r\n                        </ListItemText>\r\n                    </ListItem>\r\n\r\n\r\n                    <Divider />\r\n                    <ListItem onClick={() => setOpenDrawer(false)}>\r\n                        <ListItemText>\r\n                            <Link to=\"/admin/carrusel\" className={classes.link}>\r\n                                Materiales\r\n                            </Link>\r\n                        </ListItemText>\r\n                    </ListItem>\r\n\r\n                    <Divider />\r\n                    <ListItem onClick={() => setOpenDrawer(false)}>\r\n                        <ListItemText>\r\n                            <Link to=\"/admin/categorias\" className={classes.link}>\r\n                                Categorías\r\n                            </Link>\r\n                        </ListItemText>\r\n                    </ListItem>\r\n                    <Divider />\r\n                    <ListItem onClick={() => setOpenDrawer(false)}>\r\n                        <ListItemText>\r\n                            <Link to=\"/admin/register\" className={classes.link}>\r\n                                Registrar\r\n                            </Link>\r\n                        </ListItemText>\r\n                    </ListItem>\r\n                    <Divider />\r\n                    <ListItem onClick={() => setOpenDrawer(false)}>\r\n                        <ListItemText>\r\n\r\n                            <button\r\n                               className={classes.link}\r\n                                onClick={handleLogout}\r\n                            >\r\n                                Logout\r\n                            </button>\r\n                        </ListItemText>\r\n                    </ListItem>\r\n                    <Divider />\r\n                </List>\r\n            </Drawer>\r\n            <IconButton\r\n                onClick={() => setOpenDrawer(!openDrawer)}\r\n                className={classes.icon}\r\n            >\r\n                <MenuIcon />\r\n            </IconButton>\r\n        </>\r\n    );\r\n}\r\nexport default memo(DrawerComponent);\r\n","import { NavLink, useNavigate } from \"react-router-dom\";\r\nimport \"../../styles/styles.scss\";\r\nimport { startLogout } from \"../../actions/auth\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n\r\nimport {\r\n    AppBar,\r\n    Toolbar,\r\n    CssBaseline,\r\n    Typography,\r\n    makeStyles,\r\n    useTheme,\r\n    useMediaQuery,\r\n} from \"@material-ui/core\";\r\n\r\nimport DrawerComponent from \"./Drawer\";\r\nimport { memo } from \"react\";\r\nconst useStyles = makeStyles((theme) => ({\r\n    abRoot: {\r\n        backgroundColor: \"#c55c5c\",\r\n    },\r\n\r\n    navlinks: {\r\n        marginLeft: theme.spacing(5),\r\n        display: \"flex\",\r\n    },\r\n    logo: {\r\n        flexGrow: \"1\",\r\n        cursor: \"pointer\",\r\n    },\r\n    link: {\r\n        textDecoration: \"none\",\r\n        color: \"white\",\r\n        fontSize: \"20px\",\r\n        marginLeft: theme.spacing(5),\r\n        \"&:hover\": {\r\n            color: \"yellow\",\r\n            borderBottom: \"1px solid white\",\r\n        },\r\n    },\r\n}));\r\n\r\nconst Navbar = () => {\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n    const isMobile = useMediaQuery(theme.breakpoints.down(\"md\"));\r\n\r\n    const navigate = useNavigate();\r\n    const dispatch = useDispatch();\r\n    const { uid, name } = useSelector((state) => state.auth);\r\n\r\n    const handleLogout = () => {\r\n        dispatch(startLogout());\r\n    };\r\n\r\n    return (\r\n        <AppBar\r\n            position=\"static\"\r\n            classes={{\r\n                root: classes.abRoot,\r\n            }}\r\n        >            <CssBaseline />\r\n            <Toolbar>\r\n                <Typography variant=\"h4\" className={classes.logo}>\r\n                    Navbar\r\n                </Typography>\r\n                {isMobile ? (\r\n                    <DrawerComponent />\r\n                ) : (\r\n                    <div className={classes.navlinks}>\r\n\r\n                           <NavLink\r\n                            to=\"/admin/nosotros\"\r\n                            className={({ isActive }) =>\r\n                                \"nav-item nav-link \" +\r\n                                (isActive ? \"active\" : \"\")\r\n                            }\r\n                        >\r\n                            Nosotros\r\n                        </NavLink>\r\n                        <NavLink\r\n                            to=\"/admin/usuarios\"\r\n                            className={({ isActive }) =>\r\n                                \"nav-item nav-link \" +\r\n                                (isActive ? \"active\" : \"\")\r\n                            }\r\n                        >\r\n                            Usuarios\r\n                        </NavLink>\r\n\r\n                        <NavLink\r\n                            to=\"/admin/bolsas\"\r\n                            className={({ isActive }) =>\r\n                                \"nav-item nav-link \" +\r\n                                (isActive ? \"active\" : \"\")\r\n                            }\r\n                        >\r\n                            Bolsas\r\n                        </NavLink>\r\n\r\n                        <NavLink\r\n                            to=\"/admin/blogs\"\r\n                            className={({ isActive }) =>\r\n                                \"nav-item nav-link \" +\r\n                                (isActive ? \"active\" : \"\")\r\n                            }\r\n                        >\r\n                            Anuncios\r\n                        </NavLink>\r\n\r\n                        <NavLink\r\n                            to=\"/admin/videos\"\r\n                            className={({ isActive }) =>\r\n                                \"nav-item nav-link \" +\r\n                                (isActive ? \"active\" : \"\")\r\n                            }\r\n                        >\r\n                            Videos\r\n                        </NavLink>\r\n\r\n                        <NavLink\r\n                            to=\"/admin/carrusel\"\r\n                            className={({ isActive }) =>\r\n                                \"nav-item nav-link \" +\r\n                                (isActive ? \"active\" : \"\")\r\n                            }\r\n                        >\r\n                            Materiales\r\n                        </NavLink>\r\n\r\n                        <NavLink\r\n                            to=\"/admin/categorias\"\r\n                            className={({ isActive }) =>\r\n                                \"nav-item nav-link \" +\r\n                                (isActive ? \"active\" : \"\")\r\n                            }\r\n                        >\r\n                            Categorías\r\n                        </NavLink>\r\n\r\n                        <NavLink\r\n                            to=\"/admin/register\"\r\n                            className={({ isActive }) =>\r\n                                \"nav-item nav-link \" +\r\n                                (isActive ? \"active\" : \"\")\r\n                            }\r\n                        >\r\n                            Registrar\r\n                        </NavLink>\r\n\r\n                        <span className=\"nav-item nav-link text-info\">\r\n                            {name}\r\n                        </span>\r\n\r\n                        <button\r\n                            className=\"nav-item nav-link btn\"\r\n                            onClick={handleLogout}\r\n                        >\r\n                            Logout\r\n                        </button>\r\n                    </div>\r\n                )}\r\n            </Toolbar>\r\n        </AppBar>\r\n    );\r\n};\r\nexport default memo(Navbar);\r\n","import { useEffect } from \"react\";\r\nimport { useFormikContext } from \"formik\";\r\nimport { MyTextInput } from \"../formik\";\r\n\r\nexport default function FormUser({ currentUser }) {\r\n    const formikProps = useFormikContext();\r\n\r\n    const iniciar = (currentUser) => {\r\n        formikProps.setFieldValue(\"id\", currentUser.id);\r\n\r\n        formikProps.setFieldValue(\"name\", currentUser.name);\r\n\r\n        formikProps.setFieldValue(\"username\", currentUser.username);\r\n        formikProps.setFieldValue(\"password\", currentUser.password);\r\n\r\n    };\r\n    useEffect(() => {\r\n        iniciar(currentUser);\r\n    }, [currentUser]);\r\n\r\n    return (\r\n        <>\r\n           <div className=\"form-group mb-3 \">\r\n             <MyTextInput\r\n              label=\"Nombre\"\r\n              name=\"name\"\r\n              id=\"name\"\r\n               type=\"text\"\r\n             placeholder=\"Nombre\"\r\n                        />\r\n             </div>\r\n\r\n\r\n\r\n            <div className=\"form-group mb-3\">\r\n                <MyTextInput\r\n                   label=\"Usuario\"\r\n                     name=\"username\"\r\n                     id=\"username\"\r\n                     type=\"text\"\r\n                     placeholder=\"Usuario\"\r\n                      />\r\n\r\n\r\n\r\n\r\n                     </div>\r\n\r\n            <div className=\"form-group mb-3\">\r\n            <MyTextInput\r\n                   label=\"Password\"\r\n                     name=\"password\"\r\n                     id=\"password\"\r\n                     type=\"password\"\r\n                     placeholder=\"Password\"\r\n                      />\r\n\r\n\r\n            </div>\r\n\r\n\r\n        </>\r\n    );\r\n}\r\n","import { useState, useEffect, memo } from \"react\";\nimport UserServie from \"../../services/UserServie\";\nimport { Formik, Form } from \"formik\";\nimport * as Yup from \"yup\";\nimport \"../../styles/validaciones.scss\";\nimport Swal from \"sweetalert2\";\nimport FormUser from \"./FormUser\";\nimport { APP_DEBUG_MODE } from \"../../helpers\";\n\nconst User = ({ id }) => {\n    const initialMovieState = {\n        id: null,\n        name: \"\",\n        username: \"\",\n        password: \"\",\n    };\n\n    const [currentUser, setCurrentUser] = useState(initialMovieState);\n\n    const getUser = (id) => {\n        UserServie.getById(id)\n            .then((response) => {\n                setCurrentUser({\n                    id: response.data.id || null,\n                    name: response.data.name || \"\",\n                    username: response.data.username || \"\",\n                    password: response.data.password || \"\",\n                });\n            })\n            .catch((err) => {\n                alert(\"Ocurrio un error\");\n                APP_DEBUG_MODE &&  console.log(err);\n            });\n    };\n\n    useEffect(() => {\n        getUser(id);\n    }, [id]);\n\n    const updateUser = (data) => {\n        UserServie.update(currentUser.id, data)\n            .then((response) => {\n                Swal.fire({\n                    title: \"Success!\",\n                    text: \"El Usuario fue actualizado con éxito\",\n                    icon: \"success\",\n                    confirmButtonText: \"OK\",\n                });\n                APP_DEBUG_MODE   &&     console.log(response.data);\n            })\n            .catch((err) => {\n                alert(\"Ocurrio un error actualizando el Usuario\");\n                APP_DEBUG_MODE &&     console.log(err);\n            });\n    };\n\n    return (\n        <div className=\"submit-form\">\n            {!currentUser ? (\n                <div>\n                    <h4>Por favor selecciona un registro</h4>\n                </div>\n            ) : (\n                <div>\n                    <Formik\n                        initialValues={{\n                            id: null,\n                            name: \"\",\n                            username: \"\",\n                            password: \"\",\n                        }}\n                        onSubmit={(values) => {\n                            APP_DEBUG_MODE   &&        console.log(values);\n                            updateUser(values);\n                        }}\n                        validationSchema={Yup.object({\n                            username: Yup.string().required(\"Requerido\"),\n                            name: Yup.string().required(\"Requerido\"),\n                            password: Yup.string().required(\"Requerido\"),\n                        })}\n                    >\n                        {(formik) => (\n                            <Form>\n\n                                <div className=\"modal-body\">\n                                    <FormUser currentUser={ currentUser } />\n                                </div>\n                                <div className=\"modal-footer\">\n\n                                    <button type=\"submit\" className=\"btn btn-primary\">Actualizar</button>\n                                </div>\n                            </Form>\n                        )}\n                    </Formik>\n                </div>\n            )}\n        </div>\n    );\n};\n\nexport default memo(User);\n","import { useState,  memo } from \"react\";\nimport UserServie from \"../../services/UserServie\";\nimport { default as User } from \"./User\";\nimport { Modal } from \"react-bootstrap\";\nimport { DataGrid } from \"@mui/x-data-grid\";\nimport moment from \"moment\";\nimport Swal from \"sweetalert2\";\nimport { Header } from \"../../views/common\";\nimport useMateriales from \"../../hooks/useMateriales\";\nimport { APP_DEBUG_MODE } from \"../../helpers\";\n\nconst UserList = () => {\n    const columns = [\n        { field: \"id\", headerName: \"#\", width: 70 },\n        { field: \"name\", headerName: \"Nombre\", width: 300 },\n        { field: \"username\", headerName: \"Usuario\", width: 300 },\n        {\n            field: \"created_at\",\n            headerName: \"Fecha de creacion\",\n            width: 200,\n            renderCell: (params) => (\n                <p>\n                    {\" \"}\n                    {moment(`${params.row.created_at}`)\n                        .subtract(10, \"days\")\n                        .calendar()}{\" \"}\n                </p>\n            ),\n        },\n        {\n            field: \"updated_at\",\n            headerName: \"Ultima actualizacion\",\n            width: 200,\n            renderCell: (params) => (\n                <p>\n                    {\" \"}\n                    {moment(`${params.row.updated_at}`)\n                        .subtract(10, \"days\")\n                        .calendar()}{\" \"}\n                </p>\n            ),\n        },\n\n        {\n            field: \"Acciones\",\n            headerName: \"Acciones\",\n            width: 130,\n\n            renderCell: (params) => (\n                <>\n                    <i\n                        className=\"bi bi-eye\"\n                        onClick={() => setActiveModal(params.row.id)}\n                    ></i>\n                    <i\n                        className=\"bi bi-trash\"\n                        onClick={() => deleteUser(params.row.id)}\n                    ></i>\n                </>\n            ),\n        },\n    ];\n\n    const {  user, setUser } =\n    useMateriales();\n\n    const [currentUser, setCurrentUser] = useState(null);\n    const [lgShow, setLgShow] = useState(false);\n    const retriveUsers = () => {\n        UserServie.getAll()\n            .then((response) => {\n                setUser(response.data);\n                APP_DEBUG_MODE   &&       console.log(response.data);\n            })\n            .catch((err) => {\n                alert(\"Ocurrio un error\");\n                APP_DEBUG_MODE &&   console.log(err);\n            });\n    };\n\n    const setActiveModal = (id) => {\n        UserServie.getById(id)\n            .then((response) => {\n                setCurrentUser(response.data);\n            })\n            .catch((err) => {\n                alert(\"Ocurrio un error\");\n                APP_DEBUG_MODE &&    console.log(err);\n            });\n\n        setLgShow(true);\n    };\n\n    const setHideModal = () => {\n        retriveUsers();\n        setLgShow(false);\n\n    };\n\n    const deleteUser = (id) => {\n\n\n        Swal.fire({\n            title: 'Are you sure?',\n            text: \"You won't be able to revert this!\",\n            icon: 'warning',\n            showCancelButton: true,\n            confirmButtonColor: '#3085d6',\n            cancelButtonColor: '#d33',\n            confirmButtonText: 'Yes, delete it!'\n          }).then((result) => {\n            if (result.isConfirmed) {\n              Swal.fire(\n                'Deleted!',\n                'Your file has been deleted.',\n                'success'\n              )\n\n\n              UserServie.remove(id)\n              .then((response) => {\n                  retriveUsers()\n              })\n              .catch((err) => {\n                  alert(\"Ocurrio un error al tratar de eliminar el Usuario\")\n                  APP_DEBUG_MODE &&    console.log(err)\n              })\n\n            }\n          })\n\n\n\n\n\n    };\n\n    return (\n        <>\n\n        <Header title=\"Usuarios\" main>\n\n</Header>\n            <Modal\n                size=\"lg\"\n                show={lgShow}\n                onHide={() => setHideModal()}\n                aria-labelledby=\"example-modal-sizes-title-lg\"\n            >\n                <Modal.Header closeButton>\n                    <Modal.Title id=\"example-modal-sizes-title-lg\">\n                        Editar Usuario\n                    </Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    <User id={currentUser ? currentUser.id : 0} />\n                </Modal.Body>\n            </Modal>\n            <div style={{ height: 500, width: \"100%\" }}>\n                <DataGrid\n                    rows={user}\n                    columns={columns}\n                    pageSize={10}\n                    rowsPerPageOptions={[5]}\n                />\n            </div>\n        </>\n    );\n};\n\nexport default memo(UserList);\n","import { Routes, Route, Navigate } from \"react-router-dom\";\r\nimport Nosotros from \"../components/nosotros/Nosotros\";\r\nimport { default as Navbar } from \"../components/ui/Navbar\";\r\nimport UserList from \"../components/user/UserList\";\r\nimport { Layout } from \"../views/common\";\r\n\r\nimport {\r\n    BolsaList,\r\n    BlogsList,\r\n    CarruselApp,\r\n    CategoriasApp,\r\n    RegisterScreen,\r\n    VideosList,\r\n\r\n} from \"./index\";\r\n\r\nexport const DashboardRoutes = () => {\r\n    return (\r\n\r\n              <Layout>\r\n            <div className=\"container py-5\">\r\n                <div className=\"row\">\r\n            <Routes>\r\n\r\n\r\n                <Route path=\"nosotros\" element={<Nosotros />} />\r\n                <Route path=\"registrar\" element={<RegisterScreen />} />\r\n                <Route path=\"anuncios\" element={<BlogsList />} />\r\n                <Route path=\"bolsa\" element={<BolsaList />} />\r\n                <Route path=\"usuarios\" element={<UserList />} />\r\n                <Route path=\"videos\" element={<VideosList />} />\r\n                <Route path=\"materiales\" element={<CarruselApp />} />\r\n                <Route path=\"categorias\" element={<CategoriasApp />} />\r\n\r\n            </Routes>\r\n\r\n                </div>\r\n            </div>\r\n            </Layout>\r\n\r\n    );\r\n};\r\nexport default DashboardRoutes;\r\n"],"names":["FileAdd","formikProps","useFormikContext","className","htmlFor","id","type","name","accept","onChange","e","file","target","files","Swal","title","text","allowOutsideClick","onBeforeOpen","APP_DEBUG_MODE","console","log","startUploadingVideos","then","value","setFieldValue","html","imageWidth","imageHeight","imageAlt","reason","component","memo","FormNosotros","currentNosotros","useEffect","url","descripcion","estado","municipio","phone","domicilio","face","whatsapp","correo","iniciar","main","label","placeholder","MaterialCard","material","MaterialImage","style","boxShadow","Nosotros","useMateriales","setCurrentNosotros","initialValues","onSubmit","values","data","NosotrosServie","response","icon","confirmButtonText","catch","err","alert","validationSchema","Yup","required","email","formik","makeStyles","link","textDecoration","color","fontSize","theme","abRoot","backgroundColor","navlinks","marginLeft","spacing","display","logo","flexGrow","cursor","borderBottom","FormUser","currentUser","username","password","User","useState","setCurrentUser","UserServie","getUser","UserList","columns","field","headerName","width","renderCell","params","moment","row","created_at","subtract","calendar","updated_at","onClick","setActiveModal","deleteUser","user","setUser","lgShow","setLgShow","retriveUsers","showCancelButton","confirmButtonColor","cancelButtonColor","result","isConfirmed","Modal","size","show","onHide","closeButton","height","DataGrid","rows","pageSize","rowsPerPageOptions","DashboardRoutes","path","element"],"sourceRoot":""}